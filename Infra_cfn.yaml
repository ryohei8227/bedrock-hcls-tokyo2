Transform: AWS::LanguageExtensions

Parameters:
  BedrockModelId:
    Type: String
    Description: The ID of the Foundation Model to use for the Agent
    Default: us.anthropic.claude-3-5-sonnet-20241022-v2:0
  RedshiftDatabaseName:
    Type: String
    Default: dev
  RedshiftUserName:
    Type: String
    Default: admin
  RedshiftPassword:
    Type: String
    NoEcho: true
    Description: STORE SECURELY - The password for the Redshift master user. Must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, and one number.
    MinLength: 8
    MaxLength: 64
    AllowedPattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d!@#$%^&*()_+\-=\[\]{};:'",.<>?]{8,64}$
    ConstraintDescription: Password must be between 8 and 64 characters, and contain at least one uppercase letter, one lowercase letter, and one number.
  GithubLink:
    Type: String
    Description: The link to the agent build cloudformation stack
    Default: https://github.com/aws-samples/amazon-bedrock-agents-healthcare-lifesciences.git
  GitBranch:
    Type: String
    Description: The github branch to clone
    Default: main
  ReactAppAllowedCidr:
    Type: String
    Description: Allowed CIDR block (X.X.X.X/X) for React App UI access
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: Must be a valid CIDR block in format x.x.x.x/x
  TavilyApiKey:
    Type: String
    NoEcho: true
    Description: Provide TavilyApiKey API Key to utilize /web_search path
    Default: 
  USPTOApiKey:
    Type: String
    NoEcho: true
    Description: Provide USPTO API Key to utilize /search path
    Default: 
  DeployApplication:
    Type: String
    Description: Select true to deploy the react application and agents. Select false to only build the agents.
    Default: true
    AllowedValues:
      - true
      - false
  ExistingVpcId:
    Type: String
    Description: The VPC ID of an existing VPC in your AWS account and current region
    Default: 
  ExistingPublicSubnets:
    Type: CommaDelimitedList
    Description: A list of 2 public subnet IDs in your AWS account and AWS region from two different AZs are required.
    Default: 
  ExistingPrivateSubnets:
    Type: CommaDelimitedList
    Description: A list of 2 private subnet IDs in your AWS account and AWS region from two different AZs are required.
    Default: 

Conditions:
  HasVpcId: !Not [!Equals [!Ref ExistingVpcId, ]]
  HasTwoPublicSubnets: !Equals [Fn::Length: !Ref ExistingPublicSubnets, 2]
  HasTwoPrivateSubnets: !Equals [Fn::Length: !Ref ExistingPrivateSubnets, 2]
  CreateNetworking:
    !Not [
      !And [
        !Condition HasVpcId,
        !Condition HasTwoPublicSubnets,
        !Condition HasTwoPrivateSubnets,
      ],
    ]
  CreateWebSearchAgent: !Not [!Equals [!Ref TavilyApiKey, ]]
  CreateUSPTOSearchAgent: !Not [!Equals [!Ref USPTOApiKey, ]]
  CreateCompetitiveIntelAgent:
    !Not [!Or [!Equals [!Ref TavilyApiKey, ], !Equals [!Ref USPTOApiKey, ]]]
  CreateReactApp: !Equals [!Ref DeployApplication, true]

Resources:
  ##################################################################
  # VPC
  ##################################################################

  Network:
    Type: AWS::CloudFormation::Stack
    Condition: CreateNetworking
    Properties:
      TemplateURL: build/network.yaml
      TimeoutInMinutes: 10
      Tags:
        - Key: Project
          Value: hcls-agents-toolkit

  ##################################################################
  # S3
  ##################################################################

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-${AWS::AccountId}-${AWS::Region}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags:
        - Key: Project
          Value: hcls-agents-toolkit

  ##################################################################
  # Copy code repo to S3
  ##################################################################

  CodeRepo:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: build/copy_github_repo.yaml
      Parameters:
        GitHubUrl: !Ref GithubLink
        BranchName: !Ref GitBranch
        S3Bucket: !Ref S3Bucket
        S3KeyPrefix: repo
      TimeoutInMinutes: 5
      Tags:
        - Key: Project
          Value: hcls-agents-toolkit

  ###############################################################################
  # Custom Resources to Package Agent Templates - May not be needed in the future
  ###############################################################################

  CodeBuild:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: build/codebuild.yaml
      Parameters:
        GithubLink: !Ref GithubLink
        GitBranch: !Ref GitBranch
        S3Bucket: !Ref S3Bucket
      TimeoutInMinutes: 10
      Tags:
        - Key: Project
          Value: hcls-agents-toolkit

  ##################################################################
  # React Application
  ##################################################################

  ReactAppEcsBuildNestedStack:
    Type: AWS::CloudFormation::Stack
    Condition: CreateReactApp
    Properties:
      TemplateURL: ui/cloudformation/ecs.yml
      Parameters:
        AllowedCidr: !Ref ReactAppAllowedCidr
        VPCId:
          !If [
            CreateNetworking,
            !GetAtt Network.Outputs.VPC,
            !Ref ExistingVpcId,
          ]
        PublicSubnet1:
          !If [
            CreateNetworking,
            !GetAtt Network.Outputs.PublicSubnet1,
            !Select [0, !Ref ExistingPublicSubnets],
          ]
        PublicSubnet2:
          !If [
            CreateNetworking,
            !GetAtt Network.Outputs.PublicSubnet2,
            !Select [1, !Ref ExistingPublicSubnets],
          ]
        S3Bucket: !Ref S3Bucket
        S3CodeKey: !GetAtt CodeRepo.Outputs.S3Key
      TimeoutInMinutes: 35
      Tags:
        - Key: Project
          Value: hcls-agents-toolkit

  ##################################################################
  # Amazon Bedrock Service Role
  ##################################################################

  AgentRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - bedrock.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: BedrockInvokeModel
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - bedrock:*
                Resource:
                  - !Sub arn:${AWS::Partition}:bedrock:*::foundation-model/*
                  - !Sub arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:knowledge-base/*
                  - !Sub arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:agent-alias/*
                  - !Sub arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:agent/*
                  - !Sub arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:inference-profile/*
                  - !Sub arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:application-inference-profile/*
                  - !Sub arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:guardrail/*
      Tags:
        - Key: Project
          Value: hcls-agents-toolkit

  #################################################################################################################################################
  #################################################################################################################################################
  ##    _                _      ___      _        _
  ##   /_\  __ _ ___ _ _| |_   / __|__ _| |_ __ _| |___  __ _
  ##  / _ \/ _` / -_) ' \  _| | (__/ _` |  _/ _` | / _ \/ _` |
  ## /_/ \_\__, \___|_||_\__|  \___\__,_|\__\__,_|_\___/\__, |
  ##       |___/                                        |___/
  #################################################################################################################################################
  #################################################################################################################################################

  BiomarkerDiscoverySupervisorAgent:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - CodeBuild
    Properties:
      TemplateURL: multi_agent_collaboration/cancer_biomarker_discovery/agent_build.yaml
      Parameters:
        BedrockModelId: !Ref BedrockModelId
        RedshiftDatabaseName: !Ref RedshiftDatabaseName
        RedshiftUserName: !Ref RedshiftUserName
        RedshiftPassword: !Ref RedshiftPassword
        MultiAgentDevMode: false
        EnvironmentName: env1
        GitRepoURL: !Ref GithubLink
        GitBranch: !Ref GitBranch
        SubAgentS3Bucket: !Ref S3Bucket
        VPC:
          !If [
            CreateNetworking,
            !GetAtt Network.Outputs.VPC,
            !Ref ExistingVpcId,
          ]
        PrivateSubnet1:
          !If [
            CreateNetworking,
            !GetAtt Network.Outputs.PrivateSubnet1,
            !Select [0, !Ref ExistingPrivateSubnets],
          ]
        PrivateSubnet2:
          !If [
            CreateNetworking,
            !GetAtt Network.Outputs.PrivateSubnet2,
            !Select [1, !Ref ExistingPrivateSubnets],
          ]
        AgentRole: !GetAtt AgentRole.Arn
      TimeoutInMinutes: 30
      Tags:
        - Key: Project
          Value: hcls-agents-toolkit

  ClinicalStudySearchAgent:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: agents_catalog/15-clinical-study-research-agent/clinical-study-agent.yaml
      Parameters:
        AgentIAMRoleArn: !GetAtt AgentRole.Arn
        ChartImageBucketName: !Ref S3Bucket
      TimeoutInMinutes: 10
      Tags:
        - Key: Project
          Value: hcls-agents-toolkit

  ClinicalTrialProtocolGeneratorAgent:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: agents_catalog/16-Clinical-trial-protocol-generator-agent/clinical-trial-protocol-generator-agent.yaml
      Parameters:
        AgentIAMRoleArn: !GetAtt AgentRole.Arn
      TimeoutInMinutes: 10
      Tags:
        - Key: Project
          Value: hcls-agents-toolkit

  ClinicalTrialProtocolSupervisorAgent:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: multi_agent_collaboration/Clinical-Trial-Protocol-Assistant/clinical-trial-protocol-assistant-cfn.yaml
      Parameters:
        BedrockModelId: !Ref BedrockModelId
        AgentIAMRoleArn: !GetAtt AgentRole.Arn
        ClinicalStudySearchAgentAliasArn: !GetAtt ClinicalStudySearchAgent.Outputs.AgentAliasArn
        ClinicalTrialProtocolGeneratorAgentAliasArn: !GetAtt ClinicalTrialProtocolGeneratorAgent.Outputs.AgentAliasArn
      TimeoutInMinutes: 10
      Tags:
        - Key: Project
          Value: hcls-agents-toolkit

  WebSearchAgent:
    Type: AWS::CloudFormation::Stack
    Condition: CreateWebSearchAgent
    Properties:
      TemplateURL: agents_catalog/11-Tavily-web-search-agent/web-search-agent-cfn.yaml
      Parameters:
        AgentIAMRoleArn: !GetAtt AgentRole.Arn
        TavilyApiKey: !Ref TavilyApiKey
      TimeoutInMinutes: 35
      Tags:
        - Key: Project
          Value: hcls-agents-toolkit

  SEC10kAgent:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: agents_catalog/10-SEC-10-K-agent/sec-10-K-agent-cfn.yaml
      Parameters:
        AgentIAMRoleArn: !GetAtt AgentRole.Arn
        S3CodeBucket: !Ref S3Bucket
        S3CodeKey: !GetAtt CodeRepo.Outputs.S3Key
      TimeoutInMinutes: 35
      Tags:
        - Key: Project
          Value: hcls-agents-toolkit

  USPTOSearchAgent:
    Type: AWS::CloudFormation::Stack
    Condition: CreateUSPTOSearchAgent
    Properties:
      TemplateURL: agents_catalog/14-USPTO-search/uspto-search-agent-cfn.yaml
      Parameters:
        AgentIAMRoleArn: !GetAtt AgentRole.Arn
        USPTOApiKey: !Ref USPTOApiKey
      TimeoutInMinutes: 35
      Tags:
        - Key: Project
          Value: hcls-agents-toolkit

  CompetitiveIntelligenceSupervisorAgent:
    Type: AWS::CloudFormation::Stack
    Condition: CreateCompetitiveIntelAgent
    Properties:
      TemplateURL: multi_agent_collaboration/competitive_intelligence/competitive-intelligence-agent-cfn.yaml
      Parameters:
        BedrockModelId: !Ref BedrockModelId
        AgentIAMRoleArn: !GetAtt AgentRole.Arn
        WebSearchAgentAliasArn: !GetAtt WebSearchAgent.Outputs.AgentAliasArn
        SEC10kAgentAliasArn: !GetAtt SEC10kAgent.Outputs.AgentAliasArn
        USPTOSearchAgentAliasArn: !GetAtt USPTOSearchAgent.Outputs.AgentAliasArn
      TimeoutInMinutes: 10
      Tags:
        - Key: Project
          Value: hcls-agents-toolkit

  WileyOnlineSearchAgent:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: agents_catalog/18-Wiley-OA-life-sciences-agent/wiley-search-agent-cfn.yaml
      Parameters:
        AgentIAMRoleArn: !GetAtt AgentRole.Arn
      TimeoutInMinutes: 10
      Tags:
        - Key: Project
          Value: hcls-agents-toolkit

  UniProtProteinSearchAgent:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: agents_catalog/19-UniProt-protein-search-agent/uniprot-protein-search-agent-cfn.yaml
      Parameters:
        BedrockModelId: !Ref BedrockModelId
        AgentIAMRoleArn: !GetAtt AgentRole.Arn
      TimeoutInMinutes: 10
      Tags:
        - Key: Project
          Value: hcls-agents-toolkit

  InvivoStudySchedulerAgent:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: agents_catalog/21-invivo-study-scheduler-agent/invivo-study-scheduler-agent-cfn.yaml
      Parameters:
        AgentIAMRoleArn: !GetAtt AgentRole.Arn
        S3CodeBucket: !Ref S3Bucket
        S3CodeKey: !GetAtt CodeRepo.Outputs.S3Key
      TimeoutInMinutes: 35
      Tags:
        - Key: Project
          Value: hcls-agents-toolkit

  SafetySignalDetectionAgent:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: agents_catalog/22-Safety-Signal-Detection-Agent/safety-signal-detection-agent-cfn.yaml
      Parameters:
        BedrockModelId: !Ref BedrockModelId
        AgentIAMRoleArn: !GetAtt AgentRole.Arn
      TimeoutInMinutes: 10
      Tags:
        - Key: Project
          Value: hcls-agents-toolkit

#################################################################################################################################################
#################################################################################################################################################

Outputs:
  ReactAppExternalURL:
    Condition: CreateReactApp
    Value:
      Fn::GetAtt:
        - ReactAppEcsBuildNestedStack
        - Outputs.ExternalUrl
    Description: ALB DNS for the React App
  AgentRole:
    Value: !GetAtt AgentRole.Arn
    Description: Amazon Bedrock Service Role ARN
